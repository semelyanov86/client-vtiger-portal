name: linting, testing, building, deployment
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 17.x ]

    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force
      - name: build production project
        run: npm run build
        if: always()
      - name: linting typescript
        run: npm run lint
        if: always()
      - name: validation
        run: npm run validate
      - name: unit testing
        if: always()
        run: npm run test
      - name: check types
        run: npm run check-types
        if: always()
      - name: check format
        run: npm run check-format
        if: always()
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 17.x

      - name: Install dependencies
        run: npm ci --force

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env

      - name: Build the project
        run: npm run build

      - name: Pre deployment script
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.TIMEWEB_HOST }}
          username: ${{ secrets.TIMEWEB_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.TIMEWEB_PORT }}
          script: |
            rm -rf ~/public_html
            mkdir ~/public_html
            echo "${{ secrets.HTACCESS_CONTENT }}" > ~/public_html/.htaccess

      - name: Deploy to Timeweb Hosting
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.TIMEWEB_HOST }}
          username: ${{ secrets.TIMEWEB_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.TIMEWEB_PORT }}
          source: "dist/*"
          target: "~/public_html"

      - name: Post deployment script
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.TIMEWEB_HOST }}
          username: ${{ secrets.TIMEWEB_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.TIMEWEB_PORT }}
          script: |
            mv ~/public_html/dist/* ~/public_html/
            rm -rf ~/public_html/dist